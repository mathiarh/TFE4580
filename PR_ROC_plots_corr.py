#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov 22 12:15:47 2021

@author: mathiasrammhaugland
"""

from matplotlib import pyplot as plt
import numpy as np
from sklearn.metrics import auc

#Average values for different thresholds

tp = [33136.48039216, 32515.12254902, 31627.14379085, 30950.77614379,
 30445.9248366,  29985.8251634,  29554.89705882, 29143.8120915,
 28749.74019608, 28381.0245098,  28031.60784314, 27700.10294118,
 27387.83496732, 27081.19607843, 26767.73039216, 26448.8251634,
 26128.94934641, 25809.53104575, 25489.40196078, 25164.14869281,
 24836.07352941, 24504.5, 24173.00490196, 23846.30555556,
 23524.91993464, 23210.30882353, 22899.24673203, 22595.10784314,
 22294.00653595, 21996.65522876, 21703.43137255, 21409.93137255,
 21116.71732026, 20818.78594771, 20510.87254902, 20196.63398693,
 19877.62418301, 19555.19444444, 19234.42647059, 18921.60130719,
 18619.41666667, 18331.29084967, 18057.44934641, 17797.16013072,
 17550.34477124, 17315.30065359, 17088.27614379, 16867.87254902,
 16652.16503268, 16440.51143791, 16232.34313725, 16027.16176471,
 15825.61111111, 15625.80228758, 15427.45588235, 15228.97875817,
 15030.66993464, 14832.2875817, 14635.32189542, 14441.16993464,
 14248.5, 14056.32026144, 13864.12418301, 13672.54411765,
 13482.08169935, 13291.91013072, 13102.08986928, 12913.67973856,
 12726.29575163, 12537.29248366, 12347.91503268, 12156.09640523,
 11965.32843137, 11773.99183007, 11581.51470588, 11386.79575163,
 11189.23856209, 10989.25163399, 10784.16993464, 10575.38071895,
 10359.29738562, 10135.34477124,  9903.42647059,  9663.75653595,
  9415.96895425,  9156.42973856,  8883.72712418,  8599.44934641,
  8297.13071895,  7970.20588235,  7618.89052288,  7231.7875817,
  6802.58169935,  6327.61928105,  5804.36601307,  5224.47712418,
  4557.99019608,  3792.81699346,  2877.34803922,  1649.63071895]


fn = [0.0, 621.35784314,  1509.33660131,  2185.70424837,
  2690.55555556,  3150.65522876,  3581.58333333,  3992.66830065,
  4386.74019608,  4755.45588235,  5104.87254902,  5436.37745098,
  5748.64542484,  6055.28431373,  6368.75,  6687.65522876,
  7007.53104575,  7326.94934641,  7647.07843137,  7972.33169935,
  8300.40686275,  8631.98039216,  8963.4754902,   9290.1748366,
  9611.56045752,  9926.17156863, 10237.23366013, 10541.37254902,
 10842.47385621, 11139.8251634,  11433.04901961, 11726.54901961,
 12019.7630719,  12317.69444444, 12625.60784314, 12939.84640523,
 13258.85620915, 13581.28594771, 13902.05392157, 14214.87908497,
 14517.06372549, 14805.18954248, 15079.03104575, 15339.32026144,
 15586.13562092, 15821.17973856, 16048.20424837, 16268.60784314,
 16484.31535948, 16695.96895425, 16904.1372549,  17109.31862745,
 17310.86928105, 17510.67810458, 17709.0245098,  17907.50163399,
 18105.81045752, 18304.19281046, 18501.15849673, 18695.31045752,
 18887.98039216, 19080.16013072, 19272.35620915, 19463.93627451,
 19654.39869281, 19844.57026144, 20034.39052288, 20222.80065359,
 20410.18464052, 20599.1879085,  20788.56535948, 20980.38398693,
 21171.15196078, 21362.48856209, 21554.96568627, 21749.68464052,
 21947.24183007, 22147.22875817, 22352.31045752, 22561.0996732,
 22777.18300654, 23001.13562092, 23233.05392157, 23472.72385621,
 23720.51143791, 23980.05065359, 24252.75326797, 24537.03104575,
 24839.3496732,  25166.2745098,  25517.58986928, 25904.69281046,
 26333.89869281, 26808.86111111, 27332.11437908, 27912.00326797,
 28578.49019608, 29343.66339869, 30259.13235294, 31486.8496732 ]


tn = [0.0,  67181.80718954,  91541.29901961, 109014.03921569,
 122393.14705882, 133485.10294118, 143182.88888889, 151603.67647059,
 158865.60457516, 165160.21405229, 170633.80228758, 175447.39215686,
 179747.74183007, 183663.26633987, 187291.13071895, 190667.07843137,
 193816.57352941, 196725.48856209, 199408.87418301, 201916.40196078,
 204234.08333333, 206339.01960784, 208232.0996732, 209926.53921569,
 211457.45261438, 212839.42810458, 214099.40359477, 215244.44607843,
 216291.10947712, 217249.41176471, 218136.52941176, 218961.01470588,
 219730.78431373, 220452.29575163, 221130.75816993, 221770.61764706,
 222374.41503268, 222939.75, 223461.29411765, 223939.36928105,
 224367.66339869, 224747.8872549,  225080.61111111, 225370.26960784,
 225624.49836601, 225850.71568627, 226053.31699346, 226237.3872549,
 226405.98202614, 226561.50490196, 226707.10294118, 226842.25653595,
 226969.98856209, 227088.80228758, 227199.39542484, 227303.95424837,
 227402.60130719, 227495.14052288, 227582.90686275, 227665.97058824,
 227745.14869281, 227819.46078431, 227890.23039216, 227956.57352941,
 228018.38398693, 228076.94607843, 228132.33333333, 228186.21568627,
 228237.35294118, 228285.80392157, 228331.59313725, 228374.65686275,
 228415.87908497, 228455.55228758, 228492.58660131, 228528.00326797,
 228561.76797386, 228593.61111111, 228623.86601307, 228652.97875817,
 228680.85130719, 228707.0996732,  228732.41993464, 228756.49673203,
 228779.26797386, 228800.61764706, 228821.5996732,  228841.39542484,
 228860.28921569, 228878.10620915, 228895.35947712, 228911.75980392,
 228926.94771242, 228941.17320261, 228953.89705882, 228965.73856209,
 228978.12908497, 228988.19771242, 228996.97712418, 229005.0245098 ]


fp = [2.29007520e+05, 1.61825712e+05, 1.37466221e+05, 1.19993480e+05,
 1.06614373e+05, 9.55224167e+04, 8.58246307e+04, 7.74038431e+04,
 7.01419150e+04, 6.38473056e+04, 5.83737173e+04, 5.35601275e+04,
 4.92597778e+04, 4.53442533e+04, 4.17163889e+04, 3.83404412e+04,
 3.51909461e+04, 3.22820310e+04, 2.95986454e+04, 2.70911176e+04,
 2.47734363e+04, 2.26685000e+04, 2.07754199e+04, 1.90809804e+04,
 1.75500670e+04, 1.61680915e+04, 1.49081160e+04, 1.37630735e+04,
 1.27164101e+04, 1.17581078e+04, 1.08709902e+04, 1.00465049e+04,
 9.27673529e+03, 8.55522386e+03, 7.87676144e+03, 7.23690196e+03,
 6.63310458e+03, 6.06776961e+03, 5.54622549e+03, 5.06815033e+03,
 4.63985621e+03, 4.25963235e+03, 3.92690850e+03, 3.63725000e+03,
 3.38302124e+03, 3.15680392e+03, 2.95420261e+03, 2.77013235e+03,
 2.60153758e+03, 2.44601471e+03, 2.30041667e+03, 2.16526307e+03,
 2.03753105e+03, 1.91871732e+03, 1.80812418e+03, 1.70356536e+03,
 1.60491830e+03, 1.51237908e+03, 1.42461275e+03, 1.34154902e+03,
 1.26237092e+03, 1.18805882e+03, 1.11728922e+03, 1.05094608e+03,
 9.89135621e+02, 9.30573529e+02, 8.75186275e+02, 8.21303922e+02,
 7.70166667e+02, 7.21715686e+02, 6.75926471e+02, 6.32862745e+02,
 5.91640523e+02, 5.51967320e+02, 5.14933007e+02, 4.79516340e+02,
 4.45751634e+02, 4.13908497e+02, 3.83653595e+02, 3.54540850e+02,
 3.26668301e+02, 3.00419935e+02, 2.75099673e+02, 2.51022876e+02,
 2.28251634e+02, 2.06901961e+02, 1.85919935e+02, 1.66124183e+02,
 1.47230392e+02, 1.29413399e+02, 1.12160131e+02, 9.57598039e+01,
 8.05718954e+01, 6.63464052e+01, 5.36225490e+01, 4.17810458e+01,
 2.93905229e+01, 1.93218954e+01, 1.05424837e+01, 2.49509804e+00]


#Precision
div_prec = np.add(fp,tp)
precision = np.divide(tp,div_prec)

#Recall
div_reca = np.add(tp,fn)
recall = np.divide(tp,div_reca)

#FPR


#TPR
tpr = recall

#FPR
div_fpr = np.add(fp,tn)
fpr = np.divide(fp,div_fpr)

#DICE
div_dice1 = np.add(tp,tp)
div_dice2 = np.add(fp,fn)
div_dice3 = np.add(div_dice1,div_dice2)
dice = np.divide(div_dice1,div_dice3)

#Threshold
thr = []
for i in range(100):
    thr.append(i+1)

#PR curve
plt.plot(recall, precision)
plt.scatter(recall[43],precision[43])
plt.annotate("0.43", (recall[43], precision[43]))
plt.xlabel("Recall")
plt.ylabel("Precision")
plt.show()
print('computed AUC from PR:{}'.format(auc(recall,precision)))



#ROC curve
plt.plot(fpr,tpr)
plt.scatter(fpr[43], tpr[43])
plt.annotate("0.43",(fpr[43], tpr[43]))
plt.xlabel("FPR")
plt.ylabel("TPR")
plt.show()
print('Computed AUC for ROC: {}'.format(auc(fpr,tpr)))


print(precision[35])
print(recall[35])
print(dice[35])
print(np.argmax(dice))

g = np.argmax(np.add(precision,recall))
print(g)
print(recall[g])
print(precision[g])
print(dice[g])
